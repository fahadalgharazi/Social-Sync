{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{supabase}from\"../supabase\";import\"./profilepage.css\";/* ---- cluster images (adapt paths as needed) ---- */import reactive from\"../images/chill_optimizer.webp\";import balanced from\"../images/dynamic_dreamer.webp\";import sensitive from\"../images/zen_socialite.webp\";import secure from\"../images/grounded_visionary.png\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProfilePage=_ref=>{let{setUserCluster}=_ref;/* ---------- state ---------- */const[personalityData,setPersonalityData]=useState(null);const[openEndedResponse,setOpenEndedResponse]=useState(\"\");/* ---------- cluster dictionary ---------- */const personalityClusters={\"Reactive Idealist\":{image:reactive,traits:\"Expressive • Imaginative • Spontaneous\",description:\"Creative, people-oriented, sometimes a bit scattered but full of fresh ideas.\"},\"Balanced Realist\":{image:balanced,traits:\"Practical • Steady • Mildly Social\",description:\"Grounded and dependable with a dash of curiosity. Keeps projects (and friends) on track.\"},\"Sensitive Companion\":{image:sensitive,traits:\"Supportive • Thoughtful • Introverted\",description:\"Empathetic listeners who value harmony and close-knit connections.\"},\"Secure Optimist\":{image:secure,traits:\"Confident • Outgoing • Organized\",description:\"Positive, energetic, and goal-driven — always ready to explore and lead.\"}};/* ---------- fetch personality once ---------- */useEffect(()=>{const fetchPersonality=async()=>{const{data:{user}}=await supabase.auth.getUser();if(!(user!==null&&user!==void 0&&user.id))return console.error(\"No logged-in user.\");const{data,error}=await supabase.from(\"user_personality_data\").select(\"*\").eq(\"id\",user.id).single();if(error)return console.error(\"Supabase fetch error:\",error.message);setPersonalityData(data);setOpenEndedResponse(data.open_ended||\"\");setUserCluster===null||setUserCluster===void 0?void 0:setUserCluster(data.personality_type);// lift state if parent needs it\n};fetchPersonality();},[setUserCluster]);/* ---------- loading guard ---------- */if(!personalityData)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});const cluster=personalityData.personality_type||\"Balanced Realist\";const detail=personalityClusters[cluster]||personalityClusters[\"Balanced Realist\"];/* ---------- render ---------- */return/*#__PURE__*/_jsxs(\"div\",{className:\"profile-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"leftside\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Your Personality Cluster: \",cluster]}),/*#__PURE__*/_jsx(\"img\",{src:detail.image,alt:cluster}),/*#__PURE__*/_jsx(\"h3\",{children:\"Open-Ended Response\"}),/*#__PURE__*/_jsx(\"p\",{children:openEndedResponse})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"rightside\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Key Traits\"}),/*#__PURE__*/_jsx(\"p\",{children:detail.traits}),/*#__PURE__*/_jsx(\"h3\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"p\",{children:detail.description})]})]});};export default ProfilePage;","map":{"version":3,"names":["React","useEffect","useState","supabase","reactive","balanced","sensitive","secure","jsx","_jsx","jsxs","_jsxs","ProfilePage","_ref","setUserCluster","personalityData","setPersonalityData","openEndedResponse","setOpenEndedResponse","personalityClusters","image","traits","description","fetchPersonality","data","user","auth","getUser","id","console","error","from","select","eq","single","message","open_ended","personality_type","children","cluster","detail","className","src","alt"],"sources":["/Users/student/Desktop/trio_proj/Personality_Based_Events/webpage/src/Profile_Page/profilepage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { supabase } from \"../supabase\";\nimport \"./profilepage.css\";\n\n/* ---- cluster images (adapt paths as needed) ---- */\nimport reactive from \"../images/chill_optimizer.webp\";\nimport balanced from \"../images/dynamic_dreamer.webp\";\nimport sensitive from \"../images/zen_socialite.webp\";\nimport secure from \"../images/grounded_visionary.png\";\n\nconst ProfilePage = ({ setUserCluster }) => {\n  /* ---------- state ---------- */\n  const [personalityData, setPersonalityData] = useState(null);\n  const [openEndedResponse, setOpenEndedResponse] = useState(\"\");\n\n  /* ---------- cluster dictionary ---------- */\n  const personalityClusters = {\n    \"Reactive Idealist\": {\n      image: reactive,\n      traits: \"Expressive • Imaginative • Spontaneous\",\n      description:\n        \"Creative, people-oriented, sometimes a bit scattered but full of fresh ideas.\"\n    },\n    \"Balanced Realist\": {\n      image: balanced,\n      traits: \"Practical • Steady • Mildly Social\",\n      description:\n        \"Grounded and dependable with a dash of curiosity. Keeps projects (and friends) on track.\"\n    },\n    \"Sensitive Companion\": {\n      image: sensitive,\n      traits: \"Supportive • Thoughtful • Introverted\",\n      description:\n        \"Empathetic listeners who value harmony and close-knit connections.\"\n    },\n    \"Secure Optimist\": {\n      image: secure,\n      traits: \"Confident • Outgoing • Organized\",\n      description:\n        \"Positive, energetic, and goal-driven — always ready to explore and lead.\"\n    }\n  };\n\n  /* ---------- fetch personality once ---------- */\n  useEffect(() => {\n    const fetchPersonality = async () => {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user?.id) return console.error(\"No logged-in user.\");\n\n      const { data, error } = await supabase\n        .from(\"user_personality_data\")\n        .select(\"*\")\n        .eq(\"id\", user.id)\n        .single();\n\n      if (error) return console.error(\"Supabase fetch error:\", error.message);\n\n      setPersonalityData(data);\n      setOpenEndedResponse(data.open_ended || \"\");\n      setUserCluster?.(data.personality_type); // lift state if parent needs it\n    };\n\n    fetchPersonality();\n  }, [setUserCluster]);\n\n  /* ---------- loading guard ---------- */\n  if (!personalityData) return <div>Loading...</div>;\n\n  const cluster = personalityData.personality_type || \"Balanced Realist\";\n  const detail = personalityClusters[cluster] || personalityClusters[\"Balanced Realist\"];\n\n  /* ---------- render ---------- */\n  return (\n    <div className=\"profile-container\">\n      <div className=\"leftside\">\n        <h1>Your Personality Cluster: {cluster}</h1>\n        <img src={detail.image} alt={cluster} />\n        <h3>Open-Ended Response</h3>\n        <p>{openEndedResponse}</p>\n      </div>\n\n      <div className=\"rightside\">\n        <h3>Key Traits</h3>\n        <p>{detail.traits}</p>\n\n        <h3>Description</h3>\n        <p>{detail.description}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,QAAQ,KAAQ,aAAa,CACtC,MAAO,mBAAmB,CAE1B,sDACA,MAAO,CAAAC,QAAQ,KAAM,gCAAgC,CACrD,MAAO,CAAAC,QAAQ,KAAM,gCAAgC,CACrD,MAAO,CAAAC,SAAS,KAAM,8BAA8B,CACpD,MAAO,CAAAC,MAAM,KAAM,kCAAkC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtD,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAAwB,IAAvB,CAAEC,cAAe,CAAC,CAAAD,IAAA,CACrC,iCACA,KAAM,CAACE,eAAe,CAAEC,kBAAkB,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAC5D,KAAM,CAACe,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAE9D,8CACA,KAAM,CAAAiB,mBAAmB,CAAG,CAC1B,mBAAmB,CAAE,CACnBC,KAAK,CAAEhB,QAAQ,CACfiB,MAAM,CAAE,wCAAwC,CAChDC,WAAW,CACT,+EACJ,CAAC,CACD,kBAAkB,CAAE,CAClBF,KAAK,CAAEf,QAAQ,CACfgB,MAAM,CAAE,oCAAoC,CAC5CC,WAAW,CACT,0FACJ,CAAC,CACD,qBAAqB,CAAE,CACrBF,KAAK,CAAEd,SAAS,CAChBe,MAAM,CAAE,uCAAuC,CAC/CC,WAAW,CACT,oEACJ,CAAC,CACD,iBAAiB,CAAE,CACjBF,KAAK,CAAEb,MAAM,CACbc,MAAM,CAAE,kCAAkC,CAC1CC,WAAW,CACT,0EACJ,CACF,CAAC,CAED,kDACArB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAsB,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,KAAM,CAAEC,IAAI,CAAE,CAAEC,IAAK,CAAE,CAAC,CAAG,KAAM,CAAAtB,QAAQ,CAACuB,IAAI,CAACC,OAAO,CAAC,CAAC,CACxD,GAAI,EAACF,IAAI,SAAJA,IAAI,WAAJA,IAAI,CAAEG,EAAE,EAAE,MAAO,CAAAC,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAC,CAEzD,KAAM,CAAEN,IAAI,CAAEM,KAAM,CAAC,CAAG,KAAM,CAAA3B,QAAQ,CACnC4B,IAAI,CAAC,uBAAuB,CAAC,CAC7BC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,IAAI,CAAER,IAAI,CAACG,EAAE,CAAC,CACjBM,MAAM,CAAC,CAAC,CAEX,GAAIJ,KAAK,CAAE,MAAO,CAAAD,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAACK,OAAO,CAAC,CAEvEnB,kBAAkB,CAACQ,IAAI,CAAC,CACxBN,oBAAoB,CAACM,IAAI,CAACY,UAAU,EAAI,EAAE,CAAC,CAC3CtB,cAAc,SAAdA,cAAc,iBAAdA,cAAc,CAAGU,IAAI,CAACa,gBAAgB,CAAC,CAAE;AAC3C,CAAC,CAEDd,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,CAACT,cAAc,CAAC,CAAC,CAEpB,yCACA,GAAI,CAACC,eAAe,CAAE,mBAAON,IAAA,QAAA6B,QAAA,CAAK,YAAU,CAAK,CAAC,CAElD,KAAM,CAAAC,OAAO,CAAGxB,eAAe,CAACsB,gBAAgB,EAAI,kBAAkB,CACtE,KAAM,CAAAG,MAAM,CAAGrB,mBAAmB,CAACoB,OAAO,CAAC,EAAIpB,mBAAmB,CAAC,kBAAkB,CAAC,CAEtF,kCACA,mBACER,KAAA,QAAK8B,SAAS,CAAC,mBAAmB,CAAAH,QAAA,eAChC3B,KAAA,QAAK8B,SAAS,CAAC,UAAU,CAAAH,QAAA,eACvB3B,KAAA,OAAA2B,QAAA,EAAI,4BAA0B,CAACC,OAAO,EAAK,CAAC,cAC5C9B,IAAA,QAAKiC,GAAG,CAAEF,MAAM,CAACpB,KAAM,CAACuB,GAAG,CAAEJ,OAAQ,CAAE,CAAC,cACxC9B,IAAA,OAAA6B,QAAA,CAAI,qBAAmB,CAAI,CAAC,cAC5B7B,IAAA,MAAA6B,QAAA,CAAIrB,iBAAiB,CAAI,CAAC,EACvB,CAAC,cAENN,KAAA,QAAK8B,SAAS,CAAC,WAAW,CAAAH,QAAA,eACxB7B,IAAA,OAAA6B,QAAA,CAAI,YAAU,CAAI,CAAC,cACnB7B,IAAA,MAAA6B,QAAA,CAAIE,MAAM,CAACnB,MAAM,CAAI,CAAC,cAEtBZ,IAAA,OAAA6B,QAAA,CAAI,aAAW,CAAI,CAAC,cACpB7B,IAAA,MAAA6B,QAAA,CAAIE,MAAM,CAAClB,WAAW,CAAI,CAAC,EACxB,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAV,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}