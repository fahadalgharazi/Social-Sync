{"ast":null,"code":"// src/api/ticketmaster.js\nimport axios from\"axios\";// Ticketmaster credentials\nconst TM_API_KEY=process.env.REACT_APP_TICKETMASTER_KEY;// Endpoint\nconst TM_URL=\"https://app.ticketmaster.com/discovery/v2/events.json\";// Progressive search radii (miles)\nconst RADII_MI=[15,30,60,120,250];// Map personality cluster → keyword pipe\nconst keywordPipes={\"Reactive Idealist\":\"Music\",\"Balanced Realist\":\"Music\",\"Sensitive Companion\":\"Music\",\"Secure Optimist\":\"Music\"};// Normalize Ticketmaster event object → small UI-friendly shape\nfunction normalizeTMEvent(evt){var _evt$images,_evt$images2,_evt$dates,_evt$dates$start,_evt$dates2,_evt$dates2$start,_evt$dates3,_evt$dates3$start,_evt$_embedded,_evt$_embedded$venues,_evt$_embedded$venues2,_evt$_embedded2,_evt$_embedded2$venue,_evt$_embedded2$venue2,_evt$_embedded2$venue3,_evt$_embedded3,_evt$_embedded3$venue,_evt$_embedded3$venue2,_evt$_embedded3$venue3;const img=((_evt$images=evt.images)===null||_evt$images===void 0?void 0:_evt$images.find(i=>i.width>=300))||((_evt$images2=evt.images)===null||_evt$images2===void 0?void 0:_evt$images2[0]);return{id:evt.id,name:evt.name,url:evt.url,date:((_evt$dates=evt.dates)===null||_evt$dates===void 0?void 0:(_evt$dates$start=_evt$dates.start)===null||_evt$dates$start===void 0?void 0:_evt$dates$start.localDate)||((_evt$dates2=evt.dates)===null||_evt$dates2===void 0?void 0:(_evt$dates2$start=_evt$dates2.start)===null||_evt$dates2$start===void 0?void 0:_evt$dates2$start.dateTime)||\"\",time:((_evt$dates3=evt.dates)===null||_evt$dates3===void 0?void 0:(_evt$dates3$start=_evt$dates3.start)===null||_evt$dates3$start===void 0?void 0:_evt$dates3$start.localTime)||\"\",venueName:((_evt$_embedded=evt._embedded)===null||_evt$_embedded===void 0?void 0:(_evt$_embedded$venues=_evt$_embedded.venues)===null||_evt$_embedded$venues===void 0?void 0:(_evt$_embedded$venues2=_evt$_embedded$venues[0])===null||_evt$_embedded$venues2===void 0?void 0:_evt$_embedded$venues2.name)||\"\",venueCity:((_evt$_embedded2=evt._embedded)===null||_evt$_embedded2===void 0?void 0:(_evt$_embedded2$venue=_evt$_embedded2.venues)===null||_evt$_embedded2$venue===void 0?void 0:(_evt$_embedded2$venue2=_evt$_embedded2$venue[0])===null||_evt$_embedded2$venue2===void 0?void 0:(_evt$_embedded2$venue3=_evt$_embedded2$venue2.city)===null||_evt$_embedded2$venue3===void 0?void 0:_evt$_embedded2$venue3.name)||\"\",venueState:((_evt$_embedded3=evt._embedded)===null||_evt$_embedded3===void 0?void 0:(_evt$_embedded3$venue=_evt$_embedded3.venues)===null||_evt$_embedded3$venue===void 0?void 0:(_evt$_embedded3$venue2=_evt$_embedded3$venue[0])===null||_evt$_embedded3$venue2===void 0?void 0:(_evt$_embedded3$venue3=_evt$_embedded3$venue2.state)===null||_evt$_embedded3$venue3===void 0?void 0:_evt$_embedded3$venue3.stateCode)||\"\",imageUrl:(img===null||img===void 0?void 0:img.url)||\"\"};}/**\n * Fetch events from Ticketmaster based on personality and ZIP.\n * Expands radius until it finds events; falls back to virtual events.\n *\n * @param {string} personalityType\n * @param {string} zip\n * @param {number} limit\n * @returns {Promise<Array>}\n */export async function fetchTicketmasterEvents(personalityType,zip){let limit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:20;const keyword=keywordPipes[personalityType]||keywordPipes[\"Balanced Realist\"];for(const radius of RADII_MI){try{var _data$_embedded;const{data}=await axios.get(TM_URL,{params:{apikey:TM_API_KEY,postalCode:zip,radius,unit:\"miles\",keyword,size:limit,sort:\"date,asc\"}});const events=(data===null||data===void 0?void 0:(_data$_embedded=data._embedded)===null||_data$_embedded===void 0?void 0:_data$_embedded.events)||[];if(events.length){return events.map(normalizeTMEvent);}}catch(err){console.error(\"Ticketmaster radius \".concat(radius,\" error:\"),err);}}// Fallback: virtual/online events\ntry{var _data$_embedded2;const{data}=await axios.get(TM_URL,{params:{apikey:TM_API_KEY,keyword:\"virtual|online\",size:limit}});const events=(data===null||data===void 0?void 0:(_data$_embedded2=data._embedded)===null||_data$_embedded2===void 0?void 0:_data$_embedded2.events)||[];return events.map(normalizeTMEvent);}catch(err){console.error(\"Ticketmaster virtual fallback error:\",err);return[];}}","map":{"version":3,"names":["axios","TM_API_KEY","process","env","REACT_APP_TICKETMASTER_KEY","TM_URL","RADII_MI","keywordPipes","normalizeTMEvent","evt","_evt$images","_evt$images2","_evt$dates","_evt$dates$start","_evt$dates2","_evt$dates2$start","_evt$dates3","_evt$dates3$start","_evt$_embedded","_evt$_embedded$venues","_evt$_embedded$venues2","_evt$_embedded2","_evt$_embedded2$venue","_evt$_embedded2$venue2","_evt$_embedded2$venue3","_evt$_embedded3","_evt$_embedded3$venue","_evt$_embedded3$venue2","_evt$_embedded3$venue3","img","images","find","i","width","id","name","url","date","dates","start","localDate","dateTime","time","localTime","venueName","_embedded","venues","venueCity","city","venueState","state","stateCode","imageUrl","fetchTicketmasterEvents","personalityType","zip","limit","arguments","length","undefined","keyword","radius","_data$_embedded","data","get","params","apikey","postalCode","unit","size","sort","events","map","err","console","error","concat","_data$_embedded2"],"sources":["/Users/student/Desktop/trio_proj/Personality_Based_Events/webpage/src/api/ticketmaster.js"],"sourcesContent":["// src/api/ticketmaster.js\nimport axios from \"axios\";\n\n// Ticketmaster credentials\nconst TM_API_KEY = process.env.REACT_APP_TICKETMASTER_KEY;\n\n// Endpoint\nconst TM_URL = \"https://app.ticketmaster.com/discovery/v2/events.json\";\n\n// Progressive search radii (miles)\nconst RADII_MI = [15, 30, 60, 120, 250];\n\n// Map personality cluster → keyword pipe\nconst keywordPipes = {\n  \"Reactive Idealist\": \"Music\",\n  \"Balanced Realist\": \"Music\",\n  \"Sensitive Companion\": \"Music\",\n  \"Secure Optimist\": \"Music\"\n};\n\n// Normalize Ticketmaster event object → small UI-friendly shape\nfunction normalizeTMEvent(evt) {\n  const img = evt.images?.find(i => i.width >= 300) || evt.images?.[0];\n  return {\n    id: evt.id,\n    name: evt.name,\n    url: evt.url,\n    date: evt.dates?.start?.localDate || evt.dates?.start?.dateTime || \"\",\n    time: evt.dates?.start?.localTime || \"\",\n    venueName: evt._embedded?.venues?.[0]?.name || \"\",\n    venueCity: evt._embedded?.venues?.[0]?.city?.name || \"\",\n    venueState: evt._embedded?.venues?.[0]?.state?.stateCode || \"\",\n    imageUrl: img?.url || \"\"\n  };\n}\n\n/**\n * Fetch events from Ticketmaster based on personality and ZIP.\n * Expands radius until it finds events; falls back to virtual events.\n *\n * @param {string} personalityType\n * @param {string} zip\n * @param {number} limit\n * @returns {Promise<Array>}\n */\nexport async function fetchTicketmasterEvents(personalityType, zip, limit = 20) {\n  const keyword = keywordPipes[personalityType] || keywordPipes[\"Balanced Realist\"];\n\n  for (const radius of RADII_MI) {\n    try {\n      const { data } = await axios.get(TM_URL, {\n        params: {\n          apikey: TM_API_KEY,\n          postalCode: zip,\n          radius,\n          unit: \"miles\",\n          keyword,\n          size: limit,\n          sort: \"date,asc\"\n        }\n      });\n      const events = data?._embedded?.events || [];\n      if (events.length) {\n        return events.map(normalizeTMEvent);\n      }\n    } catch (err) {\n      console.error(`Ticketmaster radius ${radius} error:`, err);\n    }\n  }\n\n  // Fallback: virtual/online events\n  try {\n    const { data } = await axios.get(TM_URL, {\n      params: { apikey: TM_API_KEY, keyword: \"virtual|online\", size: limit }\n    });\n    const events = data?._embedded?.events || [];\n    return events.map(normalizeTMEvent);\n  } catch (err) {\n    console.error(\"Ticketmaster virtual fallback error:\", err);\n    return [];\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}