{"ast":null,"code":"import React,{useState,useEffect}from'react';import{HashRouter,Route,Routes,Navigate}from'react-router-dom';import SignupPage from'./SignUp/signup';import LoginPage from'./Login/login';import Questionnaire from'./Questionnaire/questionnaire';import LandingPage from'./Landing_Page/landingpage';import ProfilePage from'./Profile_Page/profilepage';import{supabase}from'./supabase';// Import Supabase client\nimport'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[personalityResult,setPersonalityResult]=useState({});const[userCluster,setUserCluster]=useState(\"\");const[userData,setUserData]=useState({});const[user,setUser]=useState(null);// State to track the logged-in user\nuseEffect(()=>{const getSession=async()=>{var _data$session$user,_data$session;const{data}=await supabase.auth.getSession();setUser((_data$session$user=(_data$session=data.session)===null||_data$session===void 0?void 0:_data$session.user)!==null&&_data$session$user!==void 0?_data$session$user:null);};getSession();// Listen for authentication state changes\nconst{data:subscription}=supabase.auth.onAuthStateChange((_event,session)=>{var _session$user;setUser((_session$user=session===null||session===void 0?void 0:session.user)!==null&&_session$user!==void 0?_session$user:null);});// Cleanup subscription on component unmount\nreturn()=>{if(subscription!==null&&subscription!==void 0&&subscription.subscription){subscription.subscription.unsubscribe();// Correct usage for unsubscribing\n}};},[]);// Protect routes by checking if the user is logged in\nconst ProtectedRoute=_ref=>{let{children}=_ref;if(!user){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}return children;};return/*#__PURE__*/_jsx(HashRouter,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(LandingPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/signup\",element:/*#__PURE__*/_jsx(SignupPage,{setUserData:setUserData})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(LoginPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/questionnaire\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(Questionnaire,{setPersonalityResult:setPersonalityResult})})}),/*#__PURE__*/_jsx(Route,{path:\"/profile\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(ProfilePage,{personalityResult:personalityResult,setUserCluster:setUserCluster})})})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","HashRouter","Route","Routes","Navigate","SignupPage","LoginPage","Questionnaire","LandingPage","ProfilePage","supabase","jsx","_jsx","jsxs","_jsxs","App","personalityResult","setPersonalityResult","userCluster","setUserCluster","userData","setUserData","user","setUser","getSession","_data$session$user","_data$session","data","auth","session","subscription","onAuthStateChange","_event","_session$user","unsubscribe","ProtectedRoute","_ref","children","to","path","element"],"sources":["/Users/student/Desktop/trio_proj/Personality_Based_Events/webpage/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { HashRouter, Route, Routes, Navigate } from 'react-router-dom';\nimport SignupPage from './SignUp/signup';\nimport LoginPage from './Login/login';\nimport Questionnaire from './Questionnaire/questionnaire';\nimport LandingPage from './Landing_Page/landingpage';\nimport ProfilePage from './Profile_Page/profilepage';\nimport { supabase } from './supabase'; // Import Supabase client\nimport './App.css';\n\nfunction App() {\n    const [personalityResult, setPersonalityResult] = useState({});\n    const [userCluster, setUserCluster] = useState(\"\");\n    const [userData, setUserData] = useState({});\n    const [user, setUser] = useState(null); // State to track the logged-in user\n\n    useEffect(() => {\n        const getSession = async () => {\n            const { data } = await supabase.auth.getSession();\n            setUser(data.session?.user ?? null);\n        };\n\n        getSession();\n\n        // Listen for authentication state changes\n        const { data: subscription } = supabase.auth.onAuthStateChange((_event, session) => {\n            setUser(session?.user ?? null);\n        });\n\n        // Cleanup subscription on component unmount\n        return () => {\n            if (subscription?.subscription) {\n                subscription.subscription.unsubscribe(); // Correct usage for unsubscribing\n            }\n        };\n    }, []);\n\n    // Protect routes by checking if the user is logged in\n    const ProtectedRoute = ({ children }) => {\n        if (!user) {\n            return <Navigate to=\"/login\" />;\n        }\n        return children;\n    };\n\n    return (\n        <HashRouter>\n            <Routes>\n                <Route path=\"/\" element={<LandingPage />} />\n                <Route path=\"/signup\" element={<SignupPage setUserData={setUserData} />} />\n                <Route path=\"/login\" element={<LoginPage />} />\n                <Route\n                    path=\"/questionnaire\"\n                    element={\n                        <ProtectedRoute>\n                            <Questionnaire setPersonalityResult={setPersonalityResult} />\n                        </ProtectedRoute>\n                    }\n                />\n                <Route\n                    path=\"/profile\"\n                    element={\n                        <ProtectedRoute>\n                            <ProfilePage\n                                personalityResult={personalityResult}\n                                setUserCluster={setUserCluster}\n                            />\n                        </ProtectedRoute>\n                    }\n                />\n            </Routes>\n        </HashRouter>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}